name: 🎊 Pre-Release (Git)
run-name: Pre-Release (Git) triggered by ${{ github.actor }}
on:
  workflow_dispatch:
  workflow_call:
jobs:
  build:
    name: 🏗 Build
    strategy:
      fail-fast: false      
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-unknown-linux-gnu
          # - aarch64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu            
            os: ubuntu-latest 
            failable: false
          - target: x86_64-pc-windows-msvc 
            os: windows-latest 
            failable: false          
          - target: x86_64-apple-darwin
            os: macos-latest  
            failable: false           
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            failable: false
          # - target: aarch64-apple-darwin
          #   os: macos-latest 
          #   failable: true
    continue-on-error: ${{ matrix.failable }}                              
    runs-on: ${{ matrix.os }}
    steps:
      - name: 🎟 Checkout Git Repository
        id: checkout_repository_step
        uses: actions/checkout@v2
      - name: 🧰 Install Rust Toolchain
        id: install_toolchain_step
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      # - name: 🍎💪🐋 Setup MacOS ARM Docker Image
      #   id: setup_macos_aarch64_docker_step        
      #   if: ${{ matrix.target == 'aarch64-apple-darwin' }}
      #   uses: actions-rs/cargo@v1
      #   with:          
      #     command: build-docker-image          
      #     args: aarch64-apple-darwin-cross --tag local          
      - name: 🛠 Cargo Build
        id: cargo_build_step        
        uses: actions-rs/cargo@v1
        with:          
          command: build
          use-cross: true
          args: --all-features --workspace --release --target ${{ matrix.target }}
      - name: ⬆ Upload Binary Artifact
        id: upload_binary_step        
        uses: actions/upload-artifact@v3
        with: 
          name: ${{ matrix.target }} Unstable
          path: |
            target/${{ matrix.target }}/release/paxy
            target/${{ matrix.target }}/release/paxy.exe
          if-no-files-found: error
  release:  
    needs: build        
    name: 🎊 Pre-Release
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-unknown-linux-gnu
          # - aarch64-apple-darwin
        include:
          - target: x86_64-unknown-linux-gnu
            short_target_name: linux_x86_64
            failable: false                                                        
          - target: x86_64-pc-windows-msvc
            short_target_name: windows_x86_64
            failable: false
          - target: x86_64-apple-darwin
            short_target_name: macos_x86_64
            failable: false
          - target: aarch64-unknown-linux-gnu
            short_target_name: linux_arm64
            failable: false
          # - target: aarch64-apple-darwin
          #   short_target_name: macos_arm64
          #   failable: true
    continue-on-error: ${{ matrix.failable }}            
    runs-on: ubuntu-latest
    steps:
      - name: 🎟 Checkout Git Repository
        id: checkout_repository_step
        uses: actions/checkout@v2
      - name: 🏷 Determine Git Version
        id: set_git_version        
        run: |
          git fetch --prune --unshallow --tags
          echo "LATEST_TAG=$(git tag | grep -v -P '^v([0-9]+)\.([0-9]+)\.([0-9]+).*\.' | grep -v -P '^v([0-9]+)\.([0-9]+)\.([0-9]+).*\_' | grep -v -P '^v([0-9]+)\.([0-9]+)\.([0-9]+)_$' | sort --version-sort | tail -n1)" >> $GITHUB_ENV
          GIT_VERSION="$(git describe --long 2>/dev/null | sed 's/\([^-]*-g\)/r\1/;s/-/./g' || printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)")"
          echo "GIT_VERSION=$GIT_VERSION" >> $GITHUB_ENV 
      - name: ⬇ Download Binary Artifact
        id: download_binary_step         
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.target }} Unstable
          path: output
      - name: Install dependencies
        id: install_dependencies
        run: apt-get install libssl-dev openssl
      - name: 🖩 Generate CheckSum
        id: generate_checksum_step
        run: |
          sudo apt-get install tree
          tree ${{ steps.download_binary_step.outputs.download-path }}
          find ${{ steps.download_binary_step.outputs.download-path }} -type f -exec sh -c 'md5sum $0 > $0.md5sum' {} \;
      - name: 🎊 Create Pre-Release
        id: create_release_step                
        uses: softprops/action-gh-release@v1
        with:          
          draft: false
          prerelease: true
          fail_on_unmatched_files: true
          generate_release_notes: true
          append_body: false
          tag_name: ${{ env.GIT_VERSION }}_${{ matrix.short_target_name }}
          name: ${{ matrix.short_target_name }} ${{ env.GIT_VERSION }}
          files: |
            ${{ steps.download_binary_step.outputs.download-path }}/**paxy*
